---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/comments":
    post:
      summary: Creates a comment
      tags:
      - Comments
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  text:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  post_id:
                    type: integer
                  author_id:
                    type: integer
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: integer
                text:
                  type: string
              required:
              - post_id
              - text
    get:
      summary: Gets comments
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: comments downloaded
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    post_id:
                      type: integer
                    author_id:
                      type: integer
        '404':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                post_id:
                  type: integer
              required:
              - user_id
              - post_id
  "/api/login":
    post:
      summary: Logs in
      tags:
      - Log in
      parameters: []
      responses:
        '200':
          description: returns tocken
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: integer
              required:
              - email
              - password
  "/api/posts":
    get:
      summary: Gets posts
      tags:
      - Posts
      parameters: []
      responses:
        '200':
          description: posts downloaded
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    text:
                      type: string
                    comments_counter:
                      type: integer
                    likes_counter:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    author_id:
                      type: integer
        '404':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
              - user_id
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
